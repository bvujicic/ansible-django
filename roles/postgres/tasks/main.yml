---

- name: POSTGRESQL | Install system packages
  package:
    name: "{{ item }}"
    install_recommends: true
    update_cache: true
    cache_valid_time: 3600
    state: present

  with_items:
    - postgresql-{{ pg_version }}
    - postgresql-server-dev-{{ pg_version }}
    - libpq-dev
    - python-psycopg2
    - python3-psycopg2

#- debug:
#    msg: "{% for h in groups[env] %} {{ hostvars[h].ansible_eth1.ipv4.address }} {% endfor %}"
##    msg: "{{ hostvars }}"

- name: POSTGRESQL | Update pg_hba.conf file
  become: true
  template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/{{ pg_version }}/{{ pg_cluster }}/pg_hba.conf
    owner: postgres
    group: postgres
    mode: 0640
  when: skip_database is not defined
  notify:
    - restart postgresql


- name: POSTGRESQL | Update postgres.conf file
  become: true
  template:
    src: postgres.conf.j2
    dest: /etc/postgresql/{{ pg_version }}/{{ pg_cluster }}/postgresql.conf
    owner: postgres
    group: postgres
    mode: 0640
  when: skip_database is not defined
  notify:
    - restart postgresql


- name: restart postgresql
  become: true
  service:
    name: postgresql
    state: restarted
#    arguments: "{{ pg_version }}"
  when: skip_database is not defined


- name: POSTGRESQL | Create PostgreSQL user '{{ database.owner }}'
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ database.name }}"
    password: "{{ database.password }}"
    state: present
  when: skip_database is not defined



- name: POSTGRESQL | Create PostgreSQL database '{{ database.name }}' with owner '{{ database.owner }}'
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ database.name }}"
    owner: "{{ database.owner }}"
    encoding: UTF-8
#    lc_collate: hr_HR.UTF-8
#    lc_ctype: hr_HR.UTF-8
    template: template0
    state: present
  when: skip_database is not defined